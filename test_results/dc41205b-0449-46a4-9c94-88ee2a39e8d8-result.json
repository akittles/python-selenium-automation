{"name": "User can add a product to cart", "status": "broken", "statusDetails": {"message": "KeyboardInterrupt\n", "trace": "  File \"C:\\Users\\Owner\\python-selenium-automation\\venv\\Lib\\site-packages\\behave\\model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"C:\\Users\\Owner\\python-selenium-automation\\venv\\Lib\\site-packages\\behave\\matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"features\\steps\\search_results_steps.py\", line 16, in click_add_to_cart\n    context.driver.find_element(*ADD_TO_CART_BTN).click()  # always clicks on 1st add to cart btn\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Owner\\python-selenium-automation\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 748, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Owner\\python-selenium-automation\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 352, in execute\n    response = self.command_executor.execute(driver_command, params)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Owner\\python-selenium-automation\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\remote_connection.py\", line 302, in execute\n    return self._request(command_info[0], url, body=data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Owner\\python-selenium-automation\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\remote_connection.py\", line 322, in _request\n    response = self._conn.request(method, url, body=body, headers=headers)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Owner\\python-selenium-automation\\venv\\Lib\\site-packages\\urllib3\\_request_methods.py\", line 144, in request\n    return self.request_encode_body(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Owner\\python-selenium-automation\\venv\\Lib\\site-packages\\urllib3\\_request_methods.py\", line 279, in request_encode_body\n    return self.urlopen(method, url, **extra_kw)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Owner\\python-selenium-automation\\venv\\Lib\\site-packages\\urllib3\\poolmanager.py\", line 443, in urlopen\n    response = conn.urlopen(method, u.request_uri, **kw)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Owner\\python-selenium-automation\\venv\\Lib\\site-packages\\urllib3\\connectionpool.py\", line 789, in urlopen\n    response = self._make_request(\n               ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Owner\\python-selenium-automation\\venv\\Lib\\site-packages\\urllib3\\connectionpool.py\", line 536, in _make_request\n    response = conn.getresponse()\n               ^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Owner\\python-selenium-automation\\venv\\Lib\\site-packages\\urllib3\\connection.py\", line 464, in getresponse\n    httplib_response = super().getresponse()\n                       ^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Owner\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\http\\client.py\", line 1430, in getresponse\n    self.close()\n  File \"C:\\Users\\Owner\\python-selenium-automation\\venv\\Lib\\site-packages\\urllib3\\connection.py\", line 273, in close\n    def close(self) -> None:\n    \n"}, "steps": [{"name": "Given Open target main page", "status": "passed", "start": 1727372134645, "stop": 1727372136980}, {"name": "When Search for mug", "status": "passed", "start": 1727372136980, "stop": 1727372143866}, {"name": "And Click on Add to Cart button", "status": "broken", "statusDetails": {"message": "KeyboardInterrupt\n", "trace": "  File \"C:\\Users\\Owner\\python-selenium-automation\\venv\\Lib\\site-packages\\behave\\model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"C:\\Users\\Owner\\python-selenium-automation\\venv\\Lib\\site-packages\\behave\\matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"features\\steps\\search_results_steps.py\", line 16, in click_add_to_cart\n    context.driver.find_element(*ADD_TO_CART_BTN).click()  # always clicks on 1st add to cart btn\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Owner\\python-selenium-automation\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 748, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Owner\\python-selenium-automation\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 352, in execute\n    response = self.command_executor.execute(driver_command, params)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Owner\\python-selenium-automation\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\remote_connection.py\", line 302, in execute\n    return self._request(command_info[0], url, body=data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Owner\\python-selenium-automation\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\remote_connection.py\", line 322, in _request\n    response = self._conn.request(method, url, body=body, headers=headers)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Owner\\python-selenium-automation\\venv\\Lib\\site-packages\\urllib3\\_request_methods.py\", line 144, in request\n    return self.request_encode_body(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Owner\\python-selenium-automation\\venv\\Lib\\site-packages\\urllib3\\_request_methods.py\", line 279, in request_encode_body\n    return self.urlopen(method, url, **extra_kw)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Owner\\python-selenium-automation\\venv\\Lib\\site-packages\\urllib3\\poolmanager.py\", line 443, in urlopen\n    response = conn.urlopen(method, u.request_uri, **kw)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Owner\\python-selenium-automation\\venv\\Lib\\site-packages\\urllib3\\connectionpool.py\", line 789, in urlopen\n    response = self._make_request(\n               ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Owner\\python-selenium-automation\\venv\\Lib\\site-packages\\urllib3\\connectionpool.py\", line 536, in _make_request\n    response = conn.getresponse()\n               ^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Owner\\python-selenium-automation\\venv\\Lib\\site-packages\\urllib3\\connection.py\", line 464, in getresponse\n    httplib_response = super().getresponse()\n                       ^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Owner\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\http\\client.py\", line 1430, in getresponse\n    self.close()\n  File \"C:\\Users\\Owner\\python-selenium-automation\\venv\\Lib\\site-packages\\urllib3\\connection.py\", line 273, in close\n    def close(self) -> None:\n    \n"}, "start": 1727372143866, "stop": 1727372198073}, {"name": "And Store product name", "status": "skipped", "start": 1727372208258, "stop": 1727372208258}, {"name": "And Confirm Add to Cart button from side navigation", "status": "skipped", "start": 1727372208258, "stop": 1727372208258}, {"name": "And Open cart page", "status": "skipped", "start": 1727372208258, "stop": 1727372208258}, {"name": "Then Verify cart has 1 item(s)", "status": "skipped", "start": 1727372208258, "stop": 1727372208258}, {"name": "Then Verify cart has correct product", "status": "skipped", "start": 1727372208258, "stop": 1727372208258}], "start": 1727372130210, "stop": 1727372208258, "uuid": "12c67d12-f899-40c2-b06d-1c7601827c2c", "historyId": "f12d4f6359b1398e8d10271db5c785cf", "fullName": "Target main page search tests: User can add a product to cart", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "smoke"}, {"name": "feature", "value": "Target main page search tests"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython3"}]}